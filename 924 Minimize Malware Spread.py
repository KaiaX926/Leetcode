class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        
        from collections import defaultdict

        record = [set() for _ in range(len(graph))]

		# DFS
        for i in initial:
            record[i].add(i)
            q = [i]
            visited = {i}

            while q:
                x = q.pop(0)
                record[x].add(i)
                for j, y in enumerate(graph[x]):
                    if j == x or y == 0:
                        continue
                        
                    if j not in visited:
                        q.append(j)
                        visited.add(j)
						
        # Count the number of nodes that we can prevent from getting infected for a given initial node getting removed
        d = defaultdict(int)
        print(record)
        for i in initial:
            d[i] = 0
            for r in record:
                print(r, i)
                if r == {i}:
                    print('yes')
                    d[i] += 1
        print(d)
        return max([(k,v) for k,v in d.items()], key=lambda x: (x[1], -x[0]))[0]
