Depth First Traversals: 
(a) Inorder (Left, Root, Right) : 4 2 5 1 3 
(b) Preorder (Root, Left, Right) : 1 2 4 5 3 
(c) Postorder (Left, Right, Root) : 4 5 2 3 1
https://www.geeksforgeeks.org/tree-traversals-inorder-preorder-and-postorder/


#-----------------------------
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def inorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        res = []
        
        while root:
            print(root.val)
            res = res + self.search_left(root,res)
            print(res)
            if root.left is not None:
                res = res + [root.val]
            print('root',root.val)
            root = root.right
            print('root move to:',root.val)
   
        return res
    
    def search_left(self,root,res):
        r = []
        #print('root:',root.val)
        
        if root.left is None:
            r = [root.val] + r
            return r
            
        while root.left:
            root = root.left
            #print('yee',root.val)
            r = [root.val] + r
        #print(root.val,'No left')
        
        if root.right is not None:
            root = root.right
            r = r + self.search_left(root,res)
        
        return r

    
    
        
        
                
            
            
